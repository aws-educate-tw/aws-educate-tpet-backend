AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: AWS SAM template for email sender application

Parameters:
  AwsRegion:
    Type: String
    Default: "ap-northeast-1"
    Description: AWS region

Resources:
  EmailTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: email
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: run_id
          AttributeType: S
        - AttributeName: email_id
          AttributeType: S
        - AttributeName: status
          AttributeType: S
        - AttributeName: created_at
          AttributeType: S
      KeySchema:
        - AttributeName: run_id
          KeyType: HASH
        - AttributeName: email_id
          KeyType: RANGE
      LocalSecondaryIndexes:
        - IndexName: status_lsi
          KeySchema:
            - AttributeName: run_id
              KeyType: HASH
            - AttributeName: status
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: create_at_lsi
          KeySchema:
            - AttributeName: run_id
              KeyType: HASH
            - AttributeName: created_at
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: lambda_execution_role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ECRPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ecr:BatchCheckLayerAvailability
                  - ecr:CompleteLayerUpload
                  - ecr:GetDownloadUrlForLayer
                  - ecr:InitiateLayerUpload
                  - ecr:PutImage
                  - ecr:UploadLayerPart
                Resource: arn:aws:ecr:ap-northeast-1:070576557102:repository/email-sender-repo
        - PolicyName: LambdaPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "arn:aws:logs:*:*:*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: "arn:aws:s3:::email-sender-excel/*"
              - Effect: Allow
                Action:
                  - ses:SendEmail
                Resource: "*"
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                Resource: !Sub "arn:aws:dynamodb:${AwsRegion}:*:table/email"

  EmailSenderFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: email-sender
      Role: !GetAtt LambdaExecutionRole.Arn
      PackageType: Image
      CodeUri: send-email/
      Environment:
        Variables:
          BUCKET_NAME: "email-sender-excel"
          DYNAMODB_TABLE: "email"
      Timeout: 30
      Events:
        SendEmailApi:
          Type: Api
          Properties:
            Path: /send-email
            Method: post
            RestApiId: !Ref EmailSenderApi
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: send-email/
      DockerTag: python3.11

  EmailSenderApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: EmailSenderAPI
      StageName: dev
      EndpointConfiguration: REGIONAL

Outputs:
  ApiGatewayUrl:
    Description: URL of the API Gateway for sending emails
    Value: !Sub "https://${EmailSenderApi}.execute-api.${AwsRegion}.amazonaws.com/dev/send-email"
